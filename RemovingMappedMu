ml BLAST+
makeblastdb -in Zm-W22-REFERENCE-NRGENE-2.0.fa -dbtype nucl
blastn -db Zm-W22-REFERENCE-NRGENE-2.0.fa -query MuTIR -out blastTHIS.txt
blastn -db Zm-W22-REFERENCE-NRGENE-2.0.fa -query MuTIR -out blastTHIS.txt  -max_target_seqs 1000

blastn -db Zm-W22-REFERENCE-NRGENE-2.0.fa -query MuTIR -out blastTHIS.txt -evalue 1 -word_size 11 -penalty -3 -reward 2
blastn -db Zm-W22-REFERENCE-NRGENE-2.0.fa -query MuTIRReverse -out blastTHIS.txt -evalue 1 -word_size 11 -penalty -3 -reward 2


#Used blast parameters
blastn -db Zm-W22-REFERENCE-NRGENE-2.0.fa -query TIRSeq -out testing.txt -evalue 20 -word_size 10 -outfmt 7
#Output testing.txt to R for analysis
#IN R
library(tidyverse)
MappedMu=testing.txt
MappedMu=MappedMu[,2:12]
colnames(MappedMu)=c("chromosome","%Identity", "alignmentlength", "mismatches", "gap_opens","querystart","queryend","subjectstart","subjectend","evalue", "bitscore")
MappedMu=select(MappedMu, c("chromosome","%Identity","alignmentlength","subjectstart","subjectend","evalue","bitscore"))
MappedMu1=paste(MappedMu[,1],MappedMu[,8])
MappedMu1=as.data.frame(MappedMu1)
MappedMu=cbind(MappedMu,MappedMu1)
MappedMu=select(MappedMu, "%Identity":"Position")

##Using code from MuSeq code BN edited 09-7-2022(1).R

#Generate MuCountsAll using above code, or Cleaning Reads 4.0\

#Find Forward and Reverse Mu insertions that are present in the inactive lines
#Forward
InactiveMuF=MuCountsF[,2:4]
InactiveMuF$Presence=rowSums(InactiveMuF)
InactiveMuF=filter(InactiveMuF, Presence>0)
ReferenceF=filter(InactiveMuF, Presence>5)

#Reverse
InactiveMuR=MuCountsR[,2:4]
InactiveMuR$Presence=rowSums(InactiveMuR)
InactiveMuR=filter(InactiveMuR, Presence>0)
ReferenceR=filter(InactiveMuR, Presence>5)

#Create List of Genome locations in the reference with Mu insertions
RefLocs=c(rownames(ReferenceF),rownames(ReferenceR))







